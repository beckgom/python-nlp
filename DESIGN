-*- mode:org -*-
* Basic idea
** Similar to java nlp framework, but in python
** Prototype design in python, implement any performace-dependent components in C
* Goals
** Easy to use
** Pythonic
** Fast 
* Timeline
** Prototype counter / countermap [DONE]
** Naive Bayes [DONE]
*** Test that basic counter stuff works [DONE]
** FunctionMinimizer (as iterable?) / DifferentiableFunction [DONE]
** Encoding / Decoding / IndexLinearizer (fast vector indexing operations) [NOT NECESSARY]
** Maximum Entropy Model [DONE]
** Fast math operations
*** Approximate operations [DONE]
*** Optimized vector operations
*** Thread worker pools
** Chain models (HMM / MEMM)
*** Testing mostly
** Computationally intensive chain-models (CRF)
*** Test how well the framework scales (can it handle encodings / low-level access etc.)
